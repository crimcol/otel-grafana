
services:
  loki:
    image: grafana/loki:2.9.8
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki/
      - ./loki-config.yml:/etc/loki/local-config.yaml:ro
    command: -config.file=/etc/loki/local-config.yaml
    depends_on:
      - minio
    restart: unless-stopped
      
  prometheus:
    image: prom/prometheus:v2.53.0
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-remote-write-receiver'
      - '--enable-feature=exemplar-storage'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    restart: unless-stopped
  
  tempo:
    image: grafana/tempo:2.1.1
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./tempo.yml:/etc/tempo.yml
      - tempo_data:/tmp/tempo
    restart: unless-stopped
#    ports:      
#      - "3200:3200"   # tempo      
#      - "4317:4317"  # otlp grpc
#      - "4318:4318"  # otlp http
      
  grafana:
    image: grafana/grafana:11.1.5
    container_name: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - grafana_data:/var/lib/grafana/
      - ./ds.yaml:/etc/grafana/provisioning/datasources/ds.yaml
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - prometheus
      - tempo
      - loki

  minio:
    image: minio/minio
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler && \
        minio server /data
    environment:
      - MINIO_ROOT_USER=loki
      - MINIO_ROOT_PASSWORD=supersecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    ports:
      - "9000"
    volumes:
      - minio_data:/data/
    restart: unless-stopped
  
  otel-collector:
    container_name: otelcollector
    image: otel/opentelemetry-collector-contrib:0.103.0
    command: [ --config=/etc/otel-collector-config.yml ]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    depends_on:
      - prometheus
      - loki
      - tempo
    ports:
      #   - 1888:1888 # pprof extension
      #   - 8888:8888 # Prometheus metrics exposed by the collector
      #   - 8889:8889 # Prometheus exporter metrics
      #   - 13133:13133 # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
    #   - 55679:55679 # zpages extension
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp" # Jaeger Thrift UDP receiver
      - "6832:6832/udp" # Jaeger Thrift UDP receiver for Compact format
      - "5778:5778"     # Jaeger config rest port
      - "16686:16686"   # Jaeger UI
      - "14268:14268"   # Jaeger HTTP receiver
      - "14250:14250"   # Jaeger gRPC receiver
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411" # Zipkin web UI and HTTP receiver
    restart: unless-stopped
    
volumes:
  grafana_data:
  loki_data:
  prometheus_data:
  tempo_data:
  minio_data: